{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { getApi } from \"../services\";\nimport leftArrow from \"../core/assets/left-arrow.png\";\nimport { text, theme } from \"../core/styles\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProductDetails = function ProductDetails(_ref) {\n  var id = _ref.route.params.id;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var nav = useNavigation();\n\n  var _useState3 = useState({\n    id: null,\n    name: null,\n    description: null,\n    price: null,\n    imgUrl: null,\n    date: null,\n    categories: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      product = _useState4[0],\n      setProduct = _useState4[1];\n\n  var getProduct = function getProduct() {\n    var res;\n    return _regeneratorRuntime.async(function getProduct$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getApi.get(\"/products/\" + id));\n\n          case 3:\n            res = _context.sent;\n            setIsLoading(false);\n            setProduct(res.data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getProduct();\n  }, []);\n  return _jsx(View, {\n    style: theme.container,\n    children: isLoading ? _jsx(ActivityIndicator, {\n      size: \"large\"\n    }) : _jsxs(View, {\n      style: theme.detailCard,\n      children: [_jsxs(TouchableOpacity, {\n        style: theme.goBackContainer,\n        onPress: function onPress() {\n          return nav.goBack();\n        },\n        children: [_jsx(Image, {\n          source: leftArrow\n        }), _jsx(Text, {\n          style: text.goBackText,\n          children: \"VOLTAR\"\n        })]\n      }), _jsx(View, {\n        style: theme.productImageContainer,\n        children: _jsx(Image, {\n          source: {\n            uri: product.imgUrl\n          },\n          style: {\n            height: 220,\n            width: 220\n          }\n        })\n      }), _jsx(Text, {\n        style: text.productDetailName,\n        children: product.name\n      }), _jsxs(View, {\n        style: theme.productPrice,\n        children: [_jsx(Text, {\n          style: text.currency,\n          children: \"R$\"\n        }), _jsx(Text, {\n          style: text.productValue,\n          children: product.price\n        })]\n      }), _jsx(ScrollView, {\n        style: theme.scrollTextContainer,\n        children: _jsx(Text, {\n          style: text.productDescription,\n          children: product.description\n        })\n      })]\n    })\n  });\n};\n\nexport default ProductDetails;","map":{"version":3,"sources":["C:/Users/Pedro/Desktop/Pasta com outras Pastas/Bootcamp/dscatalog/front-mobile/src/pages/ProductDetails.tsx"],"names":["React","useEffect","useState","ScrollView","TouchableOpacity","getApi","leftArrow","text","theme","useNavigation","ProductDetails","id","route","params","isLoading","setIsLoading","nav","name","description","price","imgUrl","date","categories","product","setProduct","getProduct","get","res","data","container","detailCard","goBackContainer","goBack","goBackText","productImageContainer","uri","height","width","productDetailName","productPrice","currency","productValue","scrollTextContainer","productDescription"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, ActivityIndicator, Image, Text } from \"react-native\";\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { getApi } from \"../services\";\r\n\r\nimport leftArrow from '../core/assets/left-arrow.png'\r\nimport { text, theme } from \"../core/styles\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst ProductDetails: React.FC = ({ route: { params: { id }}}) => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const nav = useNavigation()\r\n    const [product, setProduct] = useState({\r\n        id: null,\r\n        name: null,\r\n        description: null,\r\n        price: null,\r\n        imgUrl: null,\r\n        date: null,\r\n        categories: []\r\n    })\r\n\r\n   const getProduct = async () => {\r\n       setIsLoading(true)\r\n       const res = await getApi.get(`/products/${id}`)\r\n       setIsLoading(false)\r\n       setProduct(res.data)\r\n   }\r\n\r\n   useEffect(() => {\r\n       getProduct()\r\n\r\n   },[])\r\n\r\n    return (<View style={theme.container}>\r\n            { isLoading ? <ActivityIndicator size=\"large\"/> : (<View style={theme.detailCard}>\r\n                <TouchableOpacity style={theme.goBackContainer} onPress={() => nav.goBack()}>\r\n                    <Image source={leftArrow}/>\r\n                    <Text style={text.goBackText}>VOLTAR</Text>\r\n                </TouchableOpacity>\r\n                <View style={theme.productImageContainer}>\r\n                    <Image source={{ uri: product.imgUrl }} style={{height: 220, width: 220}}/>\r\n                </View>\r\n                <Text style={text.productDetailName}>{product.name}</Text>\r\n                <View style={theme.productPrice}>\r\n                    <Text style={text.currency}>R$</Text>\r\n                    <Text style={text.productValue}>{product.price}</Text>\r\n                </View>\r\n                <ScrollView style={theme.scrollTextContainer}>\r\n                    <Text style={text.productDescription}>{product.description}</Text>\r\n                </ScrollView>\r\n            </View>)}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ProductDetails;"]},"metadata":{},"sourceType":"module"}